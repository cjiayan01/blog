<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.dao.TagDao">


    <select id="getTag" resultType="Tag">
        select id,name from t_tag where id = #{id}
    </select>

    <insert id="saveTag" parameterType="Tag">
        insert into t_tag values (#{id},#{name});
    </insert>

    <!--两个id可能会相冲，取别名即可-->
    <resultMap id="tags" type="Tag">
        <id property="id" column="tid"/>
        <result property="name" column="name"/>
        <collection property="blogs" ofType="Blog">
            <id property="id" column="bid"/>
            <result property="title" column="title"/>
        </collection>
    </resultMap>

    <select id="getAllTag" resultType="Tag">
        select * from t_tag
    </select>

    <select id="getBlogTag" resultMap="tags">
        select t.id tid, t.name, b.id bid, b.title
        from t_tag t, t_blog b, t_blog_tags bt
        where t.id = bt.tag_id and b.id = bt.blog_id
    </select>

    <select id="getTagByName" resultType="Tag">
        select * from t_tag where name = #{name}
    </select>

    <delete id="deleteTag">
        delete from t_tag where id = #{id}
    </delete>

    <update id="updateTag" parameterType="Tag">
        update t_tag set name = #{name} where id = #{id};
    </update>
    <!--在某些场景下，我们需要使用mybatis返回生成的主键值。Mybatis在insert和update标签中就提供了这种功能。

    <insert id=”indetifyId”  useGeneratedKeys=”true” keyProperty=”id” keyColumn="id">

    </insert>
    useGeneratedKeys： 是否自动生成主键，默认false
    keyProperty :返回的主键值赋给哪个属性
    keyColumn： 数据库中的自增主键的列名，默认是数据库表的第一列。当主键列不是表中的第一列的时候需要设置，PostgreSQL必须设置。
    主键自动生成，取决于数据库是否支持自增主键。实际上当设置了useGeneratedKeys=“true”，Mybatis会调用JDBC的getGeneratedKeys方法，并将获取的主键值赋值给keyProperty 指定的属性。-->
<!--    <insert id="insertTag" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="com.blog.pojo.Tag">
        insert into t_tag values (#{id},#{name});
    </insert>-->
</mapper>